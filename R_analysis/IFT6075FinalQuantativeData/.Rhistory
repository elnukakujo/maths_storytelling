emmeans(result_lmm, pairwise ~ StoryAuthor)$contrasts
library(lme4)
library(lmerTest)
library(car)
library(emmeans)
result_lmm <- lmer(ResultDiff ~ StoryAuthor * StoryScenario * Order + (1 | Participant), data = df)
summary(result_lmm)
print("------------------------")
print("StoryAuthor")
emmeans(result_lmm, pairwise ~ StoryAuthor)$contrasts
print("StoryScenario | StoryAuthor")
emmeans(result_lmm, pairwise ~ StoryScenario | StoryAuthor)$contrasts
print("Order | StoryAuthor")
emmeans(result_lmm, pairwise ~ Order | StoryAuthor)$contrasts
library(lme4)
library(lmerTest)
library(car)
library(emmeans)
result_lmm <- lmer(ResultDiff ~ StoryAuthor * StoryScenario * Order + (1 | Participant), data = df)
summary(result_lmm)
print("------------------------")
qqnorm(residuals(result_lmm))
qqline(residuals(result_lmm), col = "red")
leveneTest(residuals(result_lmm) ~ StoryAuthor * StoryScenario * Order, data=df)
print("------------------------")
print("StoryAuthor")
emmeans(result_lmm, pairwise ~ StoryAuthor)$contrasts
print("StoryScenario")
emmeans(result_lmm, pairwise ~ StoryScenario)$contrasts
print("StoryScenario | StoryAuthor")
emmeans(result_lmm, pairwise ~ StoryScenario | StoryAuthor)$contrasts
print("Order | StoryAuthor")
emmeans(result_lmm, pairwise ~ Order | StoryAuthor)$contrasts
library(dplyr)
library(tidyr)
library(ggplot2)
library(lme4)
library(lmerTest)
library(car)
library(emmeans)
library(ordinal)
df_long <- read.csv(file = "data.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE) %>%
pivot_longer(
cols = starts_with("StoryScenario"),
names_to = "Order",
values_to = "StoryScenario"
) %>%
mutate(StoryAuthor = case_when(
Order == "StoryScenario1" ~ StoryAuthor1,
Order == "StoryScenario2" ~ StoryAuthor2
)) %>%
mutate(PreResult = case_when(
Order == "StoryScenario1" ~ PreResults1,
Order == "StoryScenario2" ~ PreResults2
)) %>%
mutate(PostResult = case_when(
Order == "StoryScenario1" ~ PostResults1,
Order == "StoryScenario2" ~ PostResults2
)) %>%
mutate(Survey_The_story_was_interesting_and_engaging = case_when(
Order == "StoryScenario1" ~ Survey_The_story_was_interesting_and_engaging1,
Order == "StoryScenario2" ~ Survey_The_story_was_interesting_and_engaging2
)) %>%
mutate(Survey_The_storytelling_style_made_the_mathematical_concept_more_appealing = case_when(
Order == "StoryScenario1" ~ Survey_The_storytelling_style_made_the_mathematical_concept_more_appealing1,
Order == "StoryScenario2" ~ Survey_The_storytelling_style_made_the_mathematical_concept_more_appealing2
)) %>%
mutate(Survey_The_story_felt_well_written = case_when(
Order == "StoryScenario1" ~ Survey_The_story_felt_well_written1,
Order == "StoryScenario2" ~ Survey_The_story_felt_well_written2
)) %>%
mutate(Survey_The_story_motivated_me_to_learn_more_about_this_mathematical_concept = case_when(
Order == "StoryScenario1" ~ Survey_The_story_motivated_me_to_learn_more_about_this_mathematical_concept1,
Order == "StoryScenario2" ~ Survey_The_story_motivated_me_to_learn_more_about_this_mathematical_concept2
)) %>%
mutate(Survey_I_feel_confident_that_I_could_explain_the_concept_to_someone_else = case_when(
Order == "StoryScenario1" ~ Survey_I_feel_confident_that_I_could_explain_the_concept_to_someone_else1,
Order == "StoryScenario2" ~ Survey_I_feel_confident_that_I_could_explain_the_concept_to_someone_else2
)) %>%
mutate(Survey_I_felt_more_confident_in_my_understanding_of_the_concept_after_reading_the_story = case_when(
Order == "StoryScenario1" ~ Survey_I_felt_more_confident_in_my_understanding_of_the_concept_after_reading_the_story1,
Order == "StoryScenario2" ~ Survey_I_felt_more_confident_in_my_understanding_of_the_concept_after_reading_the_story2
)) %>%
mutate(Survey_I_would_recommend_this_story_format_for_learning_similar_concepts = case_when(
Order == "StoryScenario1" ~ Survey_I_would_recommend_this_story_format_for_learning_similar_concepts1,
Order == "StoryScenario2" ~ Survey_I_would_recommend_this_story_format_for_learning_similar_concepts2
)) %>%
mutate(Survey_The_story_focused_more_on_teaching_the_math_concept_than_on_being_an_engaging_story = case_when(
Order == "StoryScenario1" ~ Survey_The_story_focused_more_on_teaching_the_math_concept_than_on_being_an_engaging_story1,
Order == "StoryScenario2" ~ Survey_The_story_focused_more_on_teaching_the_math_concept_than_on_being_an_engaging_story2
)) %>%
select(Participant, StoryScenario, StoryAuthor, Order, PreResult, PostResult, Survey_The_story_was_interesting_and_engaging, Survey_The_storytelling_style_made_the_mathematical_concept_more_appealing, Survey_The_story_felt_well_written, Survey_The_story_motivated_me_to_learn_more_about_this_mathematical_concept, Survey_I_feel_confident_that_I_could_explain_the_concept_to_someone_else, Survey_I_felt_more_confident_in_my_understanding_of_the_concept_after_reading_the_story, Survey_I_would_recommend_this_story_format_for_learning_similar_concepts, Survey_The_story_focused_more_on_teaching_the_math_concept_than_on_being_an_engaging_story)
df_long$Participant <- factor(df_long$Participant)
df_long$StoryScenario <- factor(df_long$StoryScenario)
df_long$StoryAuthor <- factor(df_long$StoryAuthor)
df_long$Order <- factor(gsub("[^0-9]", "", df_long$Order))
df_long$PreResult <- as.integer(df_long$PreResult)
df_long$PostResult <- as.integer(df_long$PostResult)
survey_median <- as.integer(apply(df_long[,grep("Survey", colnames(df_long))],1,median))
df_long <- df_long %>%
select(-matches("Survey"))
df_long$Survey_median <- survey_median
head(df_long)
ggplot(df_long, aes(x = StoryScenario, y = PreResult, fill = StoryScenario)) +
geom_boxplot() +
facet_wrap(~ StoryAuthor) + # Facet by StoryAuthor
labs(title = "PreResult by StoryAuthor and StoryScenario",
x = "StoryScenario",
y = "PreResult") +
theme_minimal() +
theme(legend.position = "none")
ggplot(df_long, aes(x = StoryScenario, y = PostResult, fill = StoryScenario)) +
geom_boxplot() +
facet_wrap(~ StoryAuthor) + # Facet by StoryAuthor
labs(title = "PostResult by StoryAuthor and StoryScenario",
x = "StoryScenario",
y = "PostResult") +
theme_minimal() +
theme(legend.position = "none")
ggplot(df_long, aes(x = StoryScenario, y = Survey_median, fill = StoryScenario)) +
geom_boxplot() +
facet_wrap(~ StoryAuthor) + # Facet by StoryAuthor
labs(title = "Survey_median by StoryAuthor and StoryScenario",
x = "StoryScenario",
y = "Survey_median") +
theme_minimal() +
theme(legend.position = "none")
ggplot(df_long, aes(x = Order, y = PreResult, fill = Order)) +
geom_boxplot() +
facet_wrap(~ StoryAuthor) + # Facet by StoryAuthor
labs(title = "PreResult by StoryAuthor and Order",
x = "Order",
y = "PreResult") +
theme_minimal() +
theme(legend.position = "none")
ggplot(df_long, aes(x = Order, y = PostResult, fill = Order)) +
geom_boxplot() +
facet_wrap(~ StoryAuthor) + # Facet by StoryAuthor
labs(title = "PostResult by StoryAuthor and Order",
x = "Order",
y = "PostResult") +
theme_minimal() +
theme(legend.position = "none")
ggplot(df_long, aes(x = Order, y = Survey_median, fill = Order)) +
geom_boxplot() +
facet_wrap(~ StoryAuthor) + # Facet by StoryAuthor
labs(title = "Survey_median by StoryAuthor and Order",
x = "Order",
y = "Survey_median") +
theme_minimal() +
theme(legend.position = "none")
df <- pivot_longer(df_long, cols = c(PreResult, PostResult),
names_to = "Phase", values_to = "Result")
df$Phase <- factor(df$Phase)
df$Result <- as.numeric(df$Result)
head(df)
result_lmm <- lmer(Result ~ Phase * StoryAuthor * StoryScenario * Order + (1|Participant), data = df)
summary(result_lmm)
print("-------------------------------")
qqnorm(residuals(result_lmm))
qqline(residuals(result_lmm), col = "red")
plot(fitted(result_lmm), abs(residuals(result_lmm)),
xlab="Fitted values",
ylab="Absolute Residuals",
main = "Spread-Level Plot for Homoscedasticity Check")
abline(lm(abs(residuals(result_lmm)) ~ fitted(result_lmm)), col = "blue", lty = 2)
leveneTest(residuals(result_lmm) ~ Phase * StoryAuthor * StoryScenario * Order, data=df)
print("-------------------------------")
anova(result_lmm)
print("-------------------------------")
emmeans(result_lmm, pairwise ~ StoryAuthor | Phase)
df <- df_long
df$ResultDiff <- as.numeric(df_long$PostResult - df_long$PreResult)
head(df)
result_lmm <- lmer(ResultDiff ~ StoryAuthor * StoryScenario * Order + (1|Participant), data = df)
summary(result_lmm)
print("-------------------------------")
qqnorm(residuals(result_lmm))
qqline(residuals(result_lmm), col = "red")
plot(fitted(result_lmm), abs(residuals(result_lmm)),
xlab="Fitted values",
ylab="Absolute Residuals",
main = "Spread-Level Plot for Homoscedasticity Check")
abline(lm(abs(residuals(result_lmm)) ~ fitted(result_lmm)), col = "blue", lty = 2)
leveneTest(residuals(result_lmm) ~ StoryAuthor * StoryScenario * Order, data=df)
print("-------------------------------")
anova(result_lmm)
print("-------------------------------")
emmeans(result_lmm, pairwise ~ StoryAuthor | StoryScenario)
df <- pivot_longer(df_long, cols = c(PreResult, PostResult),
names_to = "Phase", values_to = "Result")
df$Phase <- factor(df$Phase)
df$Result <- as.numeric(df$Result)
result_lmm <- aov(Result ~ Phase * StoryAuthor * StoryScenario * Order, data = df)
summary(result_lmm)
print("------------------------")
df <- df_long
df$ResultDiff <- as.numeric(df_long$PostResult - df_long$PreResult)
pairwise.t.test(df$ResultDiff,
df$StoryAuthor : df$StoryScenario,
p.adjust.method = "holm")
df <- df_long
df$Survey_median <- factor(df$Survey_median, ordered = TRUE)
head(df)
survey_lmm <- clmm(Survey_median ~ StoryAuthor * StoryScenario + Order + (1|Participant), data = df)
summary(survey_lmm)
print("----------------------------")
emmeans(survey_lmm, pairwise ~ StoryAuthor | Order)
print("-----------------------------")
emmeans(survey_lmm, pairwise ~ StoryAuthor | StoryScenario)
df <- df_long
survey_lmm <- lmer(Survey_median ~ StoryAuthor + StoryScenario + Order + (1|Participant), data = df)
summary(survey_lmm)
print("-------------------------------")
qqnorm(residuals(survey_lmm))
qqline(residuals(survey_lmm), col = "red")
leveneTest(residuals(survey_lmm) ~ StoryAuthor * StoryScenario * Order, data=df)
print("-------------------------------")
anova(survey_lmm)
print("-------------------------------")
emmeans(survey_lmm, pairwise ~ StoryAuthor)
df <- df_long
df$ResultDiff <- as.numeric(df_long$PostResult - df_long$PreResult)
head(df)
ggplot(df, aes(x = Order, y = PreResult, fill = Order)) +
geom_boxplot() +
facet_wrap(~ StoryScenario) + # Facet by StoryScenario
labs(title = "PreResult by StoryScenario and Order",
x = "Order",
y = "PreResult") +
theme_minimal() +
theme(legend.position = "none")
ggplot(df, aes(x = StoryScenario, y = ResultDiff, fill = StoryScenario)) +
geom_boxplot() +
facet_wrap(~ StoryAuthor) + # Facet by StoryAuthor
labs(title = "ResultDiff by StoryAuthor and StoryScenario",
x = "StoryScenario",
y = "ResultDiff") +
theme_minimal() +
theme(legend.position = "none")
ggplot(df, aes(x = StoryScenario, y = Survey_median, fill = StoryScenario)) +
geom_boxplot() +
facet_wrap(~ StoryAuthor) + # Facet by StoryAuthor
labs(title = "Survey_median by StoryAuthor and StoryScenario",
x = "StoryScenario",
y = "Survey_median") +
theme_minimal() +
theme(legend.position = "none")
ggplot(df, aes(x = Order, y = ResultDiff, fill = Order)) +
geom_boxplot() +
facet_wrap(~ StoryAuthor) + # Facet by StoryAuthor
labs(title = "ResultDiff by StoryAuthor and Order",
x = "Order",
y = "ResultDiff") +
theme_minimal() +
theme(legend.position = "none")
ggplot(df, aes(x = Order, y = Survey_median, fill = Order)) +
geom_boxplot() +
facet_wrap(~ StoryAuthor) + # Facet by StoryAuthor
labs(title = "Survey_median by StoryAuthor and Order",
x = "Order",
y = "Survey_median") +
theme_minimal() +
theme(legend.position = "none")
shapiro_test_result <- shapiro.test(df$PreResult)
print("PreResult:")
shapiro_test_result
print("----------------------")
shapiro_test_result <- shapiro.test(df$ResultDiff)
print("ResultDiff:")
shapiro_test_result
print("----------------------")
shapiro_test_result <- shapiro.test(df$Survey_median)
print("Survey_median:")
shapiro_test_result
pre_result_lmm <- lmer(PreResult ~ StoryScenario * Order + (1|Participant), data = df)
summary(pre_result_lmm)
print("-------------------------------")
qqnorm(residuals(pre_result_lmm))
qqline(residuals(pre_result_lmm), col = "red")
leveneTest(residuals(pre_result_lmm) ~ StoryScenario * Order, data=df)
print("-------------------------------")
anova(pre_result_lmm)
print("-------------------------------")
print("StoryScenario")
emmeans(pre_result_lmm, pairwise ~ StoryScenario)$contrasts
print("Order")
emmeans(pre_result_lmm, pairwise ~ Order)$contrasts
print("StoryScenario | Order")
emmeans(pre_result_lmm, pairwise ~ StoryScenario | Order)$contrasts
library(lme4)
library(lmerTest)
library(car)
library(emmeans)
result_lmm <- lmer(ResultDiff ~ StoryAuthor * StoryScenario * Order + (1 | Participant), data = df)
summary(result_lmm)
print("------------------------")
qqnorm(residuals(result_lmm))
qqline(residuals(result_lmm), col = "red")
leveneTest(residuals(result_lmm) ~ StoryAuthor * StoryScenario * Order, data=df)
print("------------------------")
print("StoryAuthor")
emmeans(result_lmm, pairwise ~ StoryAuthor)$contrasts
print("StoryScenario")
emmeans(result_lmm, pairwise ~ StoryScenario)$contrasts
print("StoryScenario | StoryAuthor")
emmeans(result_lmm, pairwise ~ StoryAuthor | StoryScenario)$contrasts
print("Order | StoryAuthor")
emmeans(result_lmm, pairwise ~ Order | StoryAuthor)$contrasts
print("ResultDiff mean with StoryAuthor Human")
mean(df[df$StoryAuthor=="Human", ]$ResultDiff)
print("-----------------------")
print("ResultDiff mean with StoryAuthor LLM")
mean(df[df$StoryAuthor=="LLM", ]$ResultDiff)
survey_lmm <- lmer(Survey_median ~ StoryAuthor + StoryScenario + Order + (1|Participant), data = df)
summary(survey_lmm)
print("-------------------------------")
qqnorm(residuals(survey_lmm))
qqline(residuals(survey_lmm), col = "red")
leveneTest(residuals(survey_lmm) ~ StoryAuthor * StoryScenario * Order, data=df)
print("-------------------------------")
anova(survey_lmm)
print("-------------------------------")
print("StoryAuthor")
emmeans(survey_lmm, pairwise ~ StoryAuthor)$contrasts
print("StoryScenario | StoryAuthor")
emmeans(survey_lmm, pairwise ~ StoryScenario | StoryAuthor)$contrasts
print("Order | StoryAuthor")
emmeans(survey_lmm, pairwise ~ Order | StoryAuthor)$contrasts
print("Survey_median mean with StoryAuthor Human")
mean(df[df$StoryAuthor=="Human", ]$Survey_median)
print("-----------------------")
print("Survey_median mean with StoryAuthor LLM")
mean(df[df$StoryAuthor=="LLM", ]$Survey_median)
df <- df_long
df$ResultDiff <- as.numeric(df_long$PostResult - df_long$PreResult)
df <- select(-PostResult)
df <- df_long
df$ResultDiff <- as.numeric(df_long$PostResult - df_long$PreResult)
df <- df %>%
select(-PostResult)
head(df)
library(dplyr)
library(tidyr)
library(ggplot2)
library(lme4)
library(lmerTest)
library(car)
library(emmeans)
library(ordinal)
df <- read.csv(file = "data.csv", header = TRUE, sep = ",", stringsAsFactors = FALSE) %>%
pivot_longer(
cols = starts_with("StoryScenario"),
names_to = "Order",
values_to = "StoryScenario"
) %>%
mutate(StoryAuthor = case_when(
Order == "StoryScenario1" ~ StoryAuthor1,
Order == "StoryScenario2" ~ StoryAuthor2
)) %>%
mutate(PreResult = case_when(
Order == "StoryScenario1" ~ PreResults1,
Order == "StoryScenario2" ~ PreResults2
)) %>%
mutate(PostResult = case_when(
Order == "StoryScenario1" ~ PostResults1,
Order == "StoryScenario2" ~ PostResults2
)) %>%
mutate(Survey_The_story_was_interesting_and_engaging = case_when(
Order == "StoryScenario1" ~ Survey_The_story_was_interesting_and_engaging1,
Order == "StoryScenario2" ~ Survey_The_story_was_interesting_and_engaging2
)) %>%
mutate(Survey_The_storytelling_style_made_the_mathematical_concept_more_appealing = case_when(
Order == "StoryScenario1" ~ Survey_The_storytelling_style_made_the_mathematical_concept_more_appealing1,
Order == "StoryScenario2" ~ Survey_The_storytelling_style_made_the_mathematical_concept_more_appealing2
)) %>%
mutate(Survey_The_story_felt_well_written = case_when(
Order == "StoryScenario1" ~ Survey_The_story_felt_well_written1,
Order == "StoryScenario2" ~ Survey_The_story_felt_well_written2
)) %>%
mutate(Survey_The_story_motivated_me_to_learn_more_about_this_mathematical_concept = case_when(
Order == "StoryScenario1" ~ Survey_The_story_motivated_me_to_learn_more_about_this_mathematical_concept1,
Order == "StoryScenario2" ~ Survey_The_story_motivated_me_to_learn_more_about_this_mathematical_concept2
)) %>%
mutate(Survey_I_feel_confident_that_I_could_explain_the_concept_to_someone_else = case_when(
Order == "StoryScenario1" ~ Survey_I_feel_confident_that_I_could_explain_the_concept_to_someone_else1,
Order == "StoryScenario2" ~ Survey_I_feel_confident_that_I_could_explain_the_concept_to_someone_else2
)) %>%
mutate(Survey_I_felt_more_confident_in_my_understanding_of_the_concept_after_reading_the_story = case_when(
Order == "StoryScenario1" ~ Survey_I_felt_more_confident_in_my_understanding_of_the_concept_after_reading_the_story1,
Order == "StoryScenario2" ~ Survey_I_felt_more_confident_in_my_understanding_of_the_concept_after_reading_the_story2
)) %>%
mutate(Survey_I_would_recommend_this_story_format_for_learning_similar_concepts = case_when(
Order == "StoryScenario1" ~ Survey_I_would_recommend_this_story_format_for_learning_similar_concepts1,
Order == "StoryScenario2" ~ Survey_I_would_recommend_this_story_format_for_learning_similar_concepts2
)) %>%
mutate(Survey_The_story_focused_more_on_teaching_the_math_concept_than_on_being_an_engaging_story = case_when(
Order == "StoryScenario1" ~ Survey_The_story_focused_more_on_teaching_the_math_concept_than_on_being_an_engaging_story1,
Order == "StoryScenario2" ~ Survey_The_story_focused_more_on_teaching_the_math_concept_than_on_being_an_engaging_story2
)) %>%
select(Participant, StoryScenario, StoryAuthor, Order, PreResult, PostResult, Survey_The_story_was_interesting_and_engaging, Survey_The_storytelling_style_made_the_mathematical_concept_more_appealing, Survey_The_story_felt_well_written, Survey_The_story_motivated_me_to_learn_more_about_this_mathematical_concept, Survey_I_feel_confident_that_I_could_explain_the_concept_to_someone_else, Survey_I_felt_more_confident_in_my_understanding_of_the_concept_after_reading_the_story, Survey_I_would_recommend_this_story_format_for_learning_similar_concepts, Survey_The_story_focused_more_on_teaching_the_math_concept_than_on_being_an_engaging_story)
df$Participant <- factor(df$Participant)
df$StoryScenario <- factor(df$StoryScenario)
df$StoryAuthor <- factor(df$StoryAuthor)
df$Order <- factor(gsub("[^0-9]", "", df$Order))
df$PreResult <- as.integer(df$PreResult)
df$PostResult <- as.integer(df$PostResult)
df$ResultDiff <- as.numeric(df$PostResult - df$PreResult)
survey_median <- as.integer(apply(df[,grep("Survey", colnames(df))],1,median))
df <- df %>%
select(-matches("Survey"), -PostResult)
df$Survey_median <- survey_median
head(df)
ggplot(df, aes(x = Order, y = PreResult, fill = Order)) +
geom_boxplot() +
facet_wrap(~ StoryScenario) + # Facet by StoryScenario
labs(title = "PreResult by StoryScenario and Order",
x = "Order",
y = "PreResult") +
theme_minimal() +
theme(legend.position = "none")
ggplot(df, aes(x = StoryScenario, y = ResultDiff, fill = StoryScenario)) +
geom_boxplot() +
facet_wrap(~ StoryAuthor) + # Facet by StoryAuthor
labs(title = "ResultDiff by StoryAuthor and StoryScenario",
x = "StoryScenario",
y = "ResultDiff") +
theme_minimal() +
theme(legend.position = "none")
ggplot(df, aes(x = StoryScenario, y = Survey_median, fill = StoryScenario)) +
geom_boxplot() +
facet_wrap(~ StoryAuthor) + # Facet by StoryAuthor
labs(title = "Survey_median by StoryAuthor and StoryScenario",
x = "StoryScenario",
y = "Survey_median") +
theme_minimal() +
theme(legend.position = "none")
ggplot(df, aes(x = Order, y = ResultDiff, fill = Order)) +
geom_boxplot() +
facet_wrap(~ StoryAuthor) + # Facet by StoryAuthor
labs(title = "ResultDiff by StoryAuthor and Order",
x = "Order",
y = "ResultDiff") +
theme_minimal() +
theme(legend.position = "none")
ggplot(df, aes(x = Order, y = Survey_median, fill = Order)) +
geom_boxplot() +
facet_wrap(~ StoryAuthor) + # Facet by StoryAuthor
labs(title = "Survey_median by StoryAuthor and Order",
x = "Order",
y = "Survey_median") +
theme_minimal() +
theme(legend.position = "none")
pre_result_lmm <- lmer(PreResult ~ StoryScenario * Order + (1|Participant), data = df)
summary(pre_result_lmm)
print("-------------------------------")
qqnorm(residuals(pre_result_lmm))
qqline(residuals(pre_result_lmm), col = "red")
leveneTest(residuals(pre_result_lmm) ~ StoryScenario * Order, data=df)
print("-------------------------------")
anova(pre_result_lmm)
print("-------------------------------")
print("StoryScenario")
emmeans(pre_result_lmm, pairwise ~ StoryScenario)$contrasts
print("Order")
emmeans(pre_result_lmm, pairwise ~ Order)$contrasts
print("StoryScenario | Order")
emmeans(pre_result_lmm, pairwise ~ StoryScenario | Order)$contrasts
library(lme4)
library(lmerTest)
library(car)
library(emmeans)
result_lmm <- lmer(ResultDiff ~ StoryAuthor * StoryScenario * Order + (1 | Participant), data = df)
summary(result_lmm)
print("------------------------")
qqnorm(residuals(result_lmm))
qqline(residuals(result_lmm), col = "red")
leveneTest(residuals(result_lmm) ~ StoryAuthor * StoryScenario * Order, data=df)
print("------------------------")
print("StoryAuthor")
emmeans(result_lmm, pairwise ~ StoryAuthor)$contrasts
print("StoryScenario")
emmeans(result_lmm, pairwise ~ StoryScenario)$contrasts
print("StoryScenario | StoryAuthor")
emmeans(result_lmm, pairwise ~ StoryAuthor | StoryScenario)$contrasts
print("Order | StoryAuthor")
emmeans(result_lmm, pairwise ~ Order | StoryAuthor)$contrasts
print("ResultDiff mean with StoryAuthor Human")
mean(df[df$StoryAuthor=="Human", ]$ResultDiff)
print("-----------------------")
print("ResultDiff mean with StoryAuthor LLM")
mean(df[df$StoryAuthor=="LLM", ]$ResultDiff)
survey_lmm <- lmer(Survey_median ~ StoryAuthor + StoryScenario + Order + (1|Participant), data = df)
summary(survey_lmm)
print("-------------------------------")
qqnorm(residuals(survey_lmm))
qqline(residuals(survey_lmm), col = "red")
leveneTest(residuals(survey_lmm) ~ StoryAuthor * StoryScenario * Order, data=df)
print("-------------------------------")
anova(survey_lmm)
print("-------------------------------")
print("StoryAuthor")
emmeans(survey_lmm, pairwise ~ StoryAuthor)$contrasts
print("StoryScenario | StoryAuthor")
emmeans(survey_lmm, pairwise ~ StoryScenario | StoryAuthor)$contrasts
print("Order | StoryAuthor")
emmeans(survey_lmm, pairwise ~ Order | StoryAuthor)$contrasts
print("Survey_median mean with StoryAuthor Human")
mean(df[df$StoryAuthor=="Human", ]$Survey_median)
print("-----------------------")
print("Survey_median mean with StoryAuthor LLM")
mean(df[df$StoryAuthor=="LLM", ]$Survey_median)
